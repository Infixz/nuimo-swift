//
//  NuimoMatrixManager.swift
//  Nuimo
//
//  Created by je on 9/1/15.
//  Copyright Â© 2015 Senic. All rights reserved.
//
//  This software may be modified and distributed under the terms
//  of the MIT license.  See the LICENSE file for details.

//TODO: This is an early prototype implementation. Define matrices as strings and convert them.
internal class NuimoMatrixManager {
    
    static let sharedManager = NuimoMatrixManager()
    
    //TODO: Move data to resource file, improve with human readable string
    func matrixData(name: String) -> NSData {
        var matrix: [UInt8]
        switch name {
        case "iosmusic":
            matrix = [0b00000000, 0b11111000, 0b11110000, 0b00100001, 0b01000010, 0b10000100, 0b10001000, 0b10011001, 0b00111011, 0b00100010, 0b00000000]
        case "sonos":
            matrix = [0b00000000, 0b11111000, 0b11110000, 0b00100001, 0b01000010, 0b10000100, 0b10001000, 0b10011001, 0b00111011, 0b00100010, 0b00000000]
        case "philipshue":
            fallthrough
        case "lifx":
            matrix = [0b00000000, 0b01110000, 0b00010000, 0b00100001, 0b01000010, 0b00000100, 0b00000111, 0b00001110, 0b00011100, 0b00010000, 0b00000000]
        case "empty":
            matrix = [0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000]
        case "bar_1":
            matrix = [0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00010000, 0b00000000]
        case "bar_2":
            matrix = [0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00010000, 0b00000000]
        case "bar_3":
            matrix = [0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000100, 0b00001000, 0b00010000, 0b00000000]
        case "bar_4":
            matrix = [0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00000000]
        case "bar_5":
            matrix = [0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00000000]
        case "bar_6":
            matrix = [0b00000000, 0b00000000, 0b00000000, 0b10000000, 0b00000000, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00000000]
        case "bar_7":
            matrix = [0b00000000, 0b00000000, 0b01000000, 0b10000000, 0b00000000, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00000000]
        case "bar_8":
            matrix = [0b00000000, 0b00100000, 0b01000000, 0b10000000, 0b00000000, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00000000]
        case "bar_9":
            matrix = [0b00010000, 0b00100000, 0b01000000, 0b10000000, 0b00000000, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00000000]
        case "off":
            matrix = [0b00000000, 0b00000000, 0b11100000, 0b00100000, 0b01000010, 0b10000100, 0b00001000, 0b00001110, 0b00000000, 0b00000000, 0b00000000]
        case "on":
            matrix = [0b00000000, 0b00000000, 0b11100000, 0b11100000, 0b11000011, 0b10000111, 0b00001111, 0b00001110, 0b00000000, 0b00000000, 0b00000000]
        case "random":
            matrix = [0b00000000, 0b00000000, 0b00011000, 0b01000011, 0b00000001, 0b00000001, 0b10000101, 0b00110001, 0b00000000, 0b00000000, 0b00000000]
        case "blue":
            matrix = [0b00000000, 0b01110000, 0b00100000, 0b01000001, 0b10000010, 0b00000011, 0b00001001, 0b00010010, 0b00011100, 0b00000000, 0b00000000]
        case "orange":
            matrix = [0b00000000, 0b01110000, 0b00010000, 0b00100001, 0b01000010, 0b10000100, 0b00001000, 0b00010001, 0b00011100, 0b00000000, 0b00000000]
        case "green":
            matrix = [0b00000000, 0b01110000, 0b00010000, 0b00100001, 0b01000000, 0b10000111, 0b00001000, 0b00010001, 0b00011100, 0b00000000, 0b00000000]
        case "white":
            matrix = [0b00000000, 0b00000100, 0b00001001, 0b00010010, 0b00100100, 0b01001000, 0b10010010, 0b00100100, 0b00110110, 0b00000000, 0b00000000]
        case "yellow":
            matrix = [0b00000000, 0b10001000, 0b00010000, 0b01000001, 0b00000001, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00000000, 0b00000000]
        case "play":
            matrix = [0b00000000, 0b00010000, 0b01100000, 0b11000000, 0b10000001, 0b00000111, 0b00000111, 0b00000110, 0b00000100, 0b00000000, 0b00000000]
        case "pause":
            matrix = [0b00000000, 0b11011000, 0b10110000, 0b01100001, 0b11000011, 0b10000110, 0b00001101, 0b00011011, 0b00110110, 0b00000000, 0b00000000]
        case "nexttrack":
            matrix = [0b00000000, 0b00000000, 0b00100000, 0b11000001, 0b10000010, 0b00000111, 0b00001011, 0b00010010, 0b00000000, 0b00000000, 0b00000000]
        case "previoustrack":
            matrix = [0b00000000, 0b00000000, 0b10010000, 0b10100000, 0b11000001, 0b10000011, 0b00000110, 0b00001001, 0b00000000, 0b00000000, 0b00000000]
        default:
            matrix = [0b00110000, 0b10010000, 0b00010000, 0b00000010, 0b00000010, 0b00000010, 0b00000010, 0b00000100, 0b00000000, 0b00010000, 0b00000000] //Question Mark
        }
        return NSData(bytes: matrix, length: 11)
    }
}
